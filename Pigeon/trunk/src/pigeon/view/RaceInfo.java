/*
 * RaceInfo.java
 *
 * Created on 06 January 2006, 22:18
 */

package pigeon.view;

import java.awt.Component;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import pigeon.model.Club;
import pigeon.model.Race;
import pigeon.model.Racepoint;

/**
 *
 * @author  Paul
 */
public class RaceInfo extends javax.swing.JPanel {
    
    private static final long serialVersionUID = 42L;

    private final Race race;
    
    /** Creates new form RaceInfo */
    public RaceInfo(Race race, Vector<Racepoint> racepoints) {
        this.race = race;
        initComponents();
        addRacepointsToCombo(racepoints);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        racepointLabel = new javax.swing.JLabel();
        racepointCombo = new javax.swing.JComboBox();
        liberationTimeLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        racepointLabel.setText("Racepoint");
        add(racepointLabel, new java.awt.GridBagConstraints());

        add(racepointCombo, new java.awt.GridBagConstraints());

        liberationTimeLabel.setText("Liberation Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(liberationTimeLabel, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel liberationTimeLabel;
    private javax.swing.JComboBox racepointCombo;
    private javax.swing.JLabel racepointLabel;
    // End of variables declaration//GEN-END:variables

    private void updateRaceObject() {
        race.setRacepoint((Racepoint)racepointCombo.getSelectedItem());
        race.setDate(new Date());
    }
    
    public void addRacepointsToCombo(Vector<Racepoint> racepoints) {
        for (Racepoint r: racepoints) {
            racepointCombo.addItem( r );
        }
    }
    
    public static void editRace(Component parent, Race race, Vector<Racepoint> racepoints) {
        RaceInfo panel = new RaceInfo(race, racepoints);
        JOptionPane.showMessageDialog(parent, panel, "Race Information", JOptionPane.PLAIN_MESSAGE);
        panel.updateRaceObject();
    }
    
    public static Race createRace(Component parent, Club club) {
        Race race = new Race(club);
        editRace(parent, race, Utilities.sortCollection(club.getRacepoints()));
        return race;
    }

}
